{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, forwardRef, Component, Output, Input, NgModule } from '@angular/core';\nimport { Weekday, RRule, rrulestr } from 'rrule';\nimport * as _ from 'lodash';\nimport * as i1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateAdapter, NgbDateNativeAdapter, NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nconst getDateParts = date => {\n  return isValidDate(date) ? {\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate()\n  } : {};\n};\n\nconst isValidDate = d => {\n  return !isNaN(d) && d instanceof Date;\n};\n\nconst formatDate = date => {\n  return date;\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n};\n\nconst computeStart = date => {\n  let start = {};\n\n  if (date) {\n    if (!date.onDate || !isValidDate(date.onDate.date)) {\n      start = new Date().setMilliseconds(0);\n    } else {\n      start = date.onDate.date;\n    }\n\n    const dateParts = getDateParts(start);\n    return {\n      dtstart: new Date(Date.UTC(dateParts.year, dateParts.month - 1, dateParts.day, 0, 0))\n    };\n  }\n\n  return start;\n};\n\nconst DATE_TIME_FORMAT = 'YYYY-MM-DD';\nconst MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday', 'Day', 'Weekday', 'Weekend day'];\n\nconst computeYearlyOn = on => ({\n  bymonth: MONTHS.indexOf(on.month) + 1,\n  bymonthday: on.day\n});\n\nconst computeYearlyOnThe = onThe => {\n  const repeat = {};\n\n  switch (onThe.which) {\n    case 'First':\n      repeat.bysetpos = 1;\n      break;\n\n    case 'Second':\n      repeat.bysetpos = 2;\n      break;\n\n    case 'Third':\n      repeat.bysetpos = 3;\n      break;\n\n    case 'Fourth':\n      repeat.bysetpos = 4;\n      break;\n\n    case 'Last':\n      repeat.bysetpos = -1;\n      break;\n\n    default:\n      break;\n  }\n\n  switch (onThe.day) {\n    case 'Monday':\n      repeat.byweekday = [0];\n      break;\n\n    case 'Tuesday':\n      repeat.byweekday = [1];\n      break;\n\n    case 'Wednesday':\n      repeat.byweekday = [2];\n      break;\n\n    case 'Thursday':\n      repeat.byweekday = [3];\n      break;\n\n    case 'Friday':\n      repeat.byweekday = [4];\n      break;\n\n    case 'Saturday':\n      repeat.byweekday = [5];\n      break;\n\n    case 'Sunday':\n      repeat.byweekday = [6];\n      break;\n\n    case 'Day':\n      repeat.byweekday = [0, 1, 2, 3, 4, 5, 6];\n      break;\n\n    case 'Weekday':\n      repeat.byweekday = [0, 1, 2, 3, 4];\n      break;\n\n    case 'Weekend day':\n      repeat.byweekday = [5, 6];\n      break;\n\n    default:\n      break;\n  }\n\n  if (repeat.byweekday && repeat.bysetpos) {\n    repeat.byweekday = repeat.byweekday.map(r => new Weekday(r, repeat.bysetpos));\n  }\n\n  repeat.bymonth = MONTHS.indexOf(onThe.month) + 1;\n  return repeat;\n};\n\nconst computeYearly = ({\n  mode,\n  on,\n  onThe\n}) => {\n  if (on || onThe) {\n    return {\n      freq: RRule.YEARLY,\n      ...(mode === 'on' ? computeYearlyOn(on) : computeYearlyOnThe(onThe))\n    };\n  } else {\n    return {};\n  }\n};\n\nconst computeMonthlyOn = on => ({\n  bymonthday: on.day\n});\n\nconst computeMonthlyOnThe = onThe => {\n  let repeat = {};\n\n  switch (onThe.which) {\n    case 'First':\n      repeat.bysetpos = 1;\n      break;\n\n    case 'Second':\n      repeat.bysetpos = 2;\n      break;\n\n    case 'Third':\n      repeat.bysetpos = 3;\n      break;\n\n    case 'Fourth':\n      repeat.bysetpos = 4;\n      break;\n\n    case 'Last':\n      repeat.bysetpos = -1;\n      break;\n\n    default:\n      break;\n  }\n\n  switch (onThe.day) {\n    case 'Monday':\n      repeat.byweekday = [0];\n      break;\n\n    case 'Tuesday':\n      repeat.byweekday = [1];\n      break;\n\n    case 'Wednesday':\n      repeat.byweekday = [2];\n      break;\n\n    case 'Thursday':\n      repeat.byweekday = [3];\n      break;\n\n    case 'Friday':\n      repeat.byweekday = [4];\n      break;\n\n    case 'Saturday':\n      repeat.byweekday = [5];\n      break;\n\n    case 'Sunday':\n      repeat.byweekday = [6];\n      break;\n\n    case 'Day':\n      repeat.byweekday = [0, 1, 2, 3, 4, 5, 6];\n      break;\n\n    case 'Weekday':\n      repeat.byweekday = [0, 1, 2, 3, 4];\n      break;\n\n    case 'Weekend day':\n      repeat.byweekday = [5, 6];\n      break;\n\n    default:\n      break;\n  }\n\n  if (repeat.byweekday && repeat.bysetpos) {\n    repeat.byweekday = repeat.byweekday.map(r => new Weekday(r, repeat.bysetpos));\n  }\n\n  return repeat;\n};\n\nconst computeMonthly = ({\n  mode,\n  interval,\n  on,\n  onThe\n}) => ({\n  freq: RRule.MONTHLY,\n  interval,\n  ...(mode === 'on' ? computeMonthlyOn(on) : computeMonthlyOnThe(onThe))\n});\n\nconst computeWeekly = ({\n  interval,\n  days\n}) => ({\n  freq: RRule.WEEKLY,\n  interval,\n  byweekday: _.values(days).reduce((activeDays, isDayActive, dayIndex) => isDayActive ? [...activeDays, dayIndex] : activeDays, [])\n});\n\nconst computeDaily = interval => ({\n  freq: RRule.DAILY,\n  interval\n});\n\nconst computeHourly = interval => ({\n  freq: RRule.HOURLY,\n  interval\n});\n\nconst computeRepeat = ({\n  frequency,\n  yearly,\n  monthly,\n  weekly,\n  interval\n}) => {\n  switch (frequency) {\n    case 'Yearly':\n      {\n        return computeYearly(yearly);\n      }\n\n    case 'Monthly':\n      {\n        return computeMonthly(monthly);\n      }\n\n    case 'Weekly':\n      {\n        return computeWeekly(weekly);\n      }\n\n    case 'Daily':\n      {\n        return computeDaily(interval);\n      }\n\n    case 'Hourly':\n      {\n        return computeHourly(interval);\n      }\n\n    default:\n      return {};\n  }\n};\n\nconst computeEnd = attr => {\n  const end = {};\n\n  if (attr) {\n    const {\n      mode,\n      after\n    } = attr;\n    const date = attr.onDate.date;\n\n    if (mode === 'After') {\n      end.count = after;\n    }\n\n    if (mode === 'On date' && isValidDate(date)) {\n      const dateParts = getDateParts(date);\n      end.until = new Date(Date.UTC(dateParts.year, dateParts.month - 1, dateParts.day, 23, 59, 59, 999));\n    }\n  }\n\n  return end;\n};\n\nconst computeOptions = ({\n  hideStart,\n  weekStartsOnSunday,\n  tz\n}) => {\n  const options = {};\n\n  if (hideStart) {\n    options.dtstart = null;\n  }\n\n  if (weekStartsOnSunday) {\n    options.wkst = RRule.SU;\n  }\n\n  options.tzid = tz ? tz : Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return options;\n};\n\nconst computeRRule$1 = ({\n  start,\n  repeat,\n  end,\n  options\n}) => {\n  const rruleObject = { ...computeStart(start),\n    ...computeRepeat(repeat),\n    ...computeEnd(end),\n    ...computeOptions(options)\n  };\n  const rrule = new RRule(rruleObject);\n  return rrule;\n};\n\nlet NgxRruleService = /*#__PURE__*/(() => {\n  class NgxRruleService {\n    constructor() {}\n\n    computeRRule(params) {\n      return computeRRule$1(params);\n    }\n\n  }\n\n  NgxRruleService.ɵfac = function NgxRruleService_Factory(t) {\n    return new (t || NgxRruleService)();\n  };\n\n  NgxRruleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NgxRruleService,\n    factory: NgxRruleService.ɵfac,\n    providedIn: 'root'\n  });\n  return NgxRruleService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst computeStartOnDate = (data, rruleObj) => {\n  if (!rruleObj.dtstart) {\n    return data.start.onDate.date;\n  }\n\n  return rruleObj.dtstart;\n};\n\nconst computeFrequency = (data, rruleObj) => {\n  switch (rruleObj.freq) {\n    case 0:\n      {\n        return 'Yearly';\n      }\n\n    case 1:\n      {\n        return 'Monthly';\n      }\n\n    case 2:\n      {\n        return 'Weekly';\n      }\n\n    case 3:\n      {\n        return 'Daily';\n      }\n\n    case 4:\n      {\n        return 'Hourly';\n      }\n\n    default:\n      {\n        return data.repeat.frequency;\n      }\n  }\n};\n\nconst computeYearlyMode = (data, rruleObj) => {\n  if (rruleObj.freq !== 0 || !rruleObj.bymonth) {\n    return data.repeat.yearly.mode;\n  }\n\n  if (rruleObj.bymonthday) {\n    return 'on';\n  }\n\n  return 'on the';\n};\n\nconst computeYearlyOnMonth = (data, rruleObj) => {\n  if (rruleObj.freq !== 0 || !rruleObj.bymonthday) {\n    return data.repeat.yearly.on.month;\n  }\n\n  if (typeof rruleObj.bymonth === 'number') {\n    return MONTHS[rruleObj.bymonth - 1];\n  }\n\n  return MONTHS[rruleObj.bymonth[0] - 1];\n};\n\nconst computeYearlyOnMonthday = (data, rruleObj) => {\n  if (rruleObj.freq !== 0 || !rruleObj.bymonthday) {\n    return data.repeat.yearly.on.day;\n  }\n\n  if (typeof rruleObj.bymonthday === 'number') {\n    return rruleObj.bymonthday;\n  }\n\n  return rruleObj.bymonthday[0];\n};\n\nconst computeYearlyOnTheMonth = (data, rruleObj) => {\n  if (rruleObj.freq !== 0 || !rruleObj.byweekday) {\n    return data.repeat.yearly.onThe.month;\n  }\n\n  if (typeof rruleObj.bymonth === 'number') {\n    return MONTHS[rruleObj.bymonth - 1];\n  }\n\n  return MONTHS[rruleObj.bymonth[0] - 1];\n};\n\nconst computeYearlyOnTheMonthday = (data, rruleObj) => {\n  if (rruleObj.freq !== 0 || !rruleObj.byweekday) {\n    return data.repeat.yearly.onThe.day;\n  }\n\n  const weekdays = rruleObj.byweekday.map(weekday => weekday.weekday).join(',');\n\n  switch (weekdays) {\n    case '0':\n      {\n        return 'Monday';\n      }\n\n    case '1':\n      {\n        return 'Tuesday';\n      }\n\n    case '2':\n      {\n        return 'Wednesday';\n      }\n\n    case '3':\n      {\n        return 'Thursday';\n      }\n\n    case '4':\n      {\n        return 'Friday';\n      }\n\n    case '5':\n      {\n        return 'Saturday';\n      }\n\n    case '6':\n      {\n        return 'Sunday';\n      }\n\n    case '0,1,2,3,4,5,6':\n      {\n        return 'Day';\n      }\n\n    case '0,1,2,3,4':\n      {\n        return 'Weekday';\n      }\n\n    case '5,6':\n      {\n        return 'Weekend day';\n      }\n\n    default:\n      {\n        return data.repeat.yearly.onThe.day;\n      }\n  }\n};\n\nconst computeYearlyOnTheWhich = (data, rruleObj) => {\n  if (rruleObj.freq !== 0 || !rruleObj.byweekday) {\n    return data.repeat.yearly.onThe.which;\n  }\n\n  const bysetpos = typeof rruleObj.bysetpos === 'number' ? rruleObj.bysetpos : rruleObj.bysetpos[0];\n\n  switch (bysetpos) {\n    case 1:\n      {\n        return 'First';\n      }\n\n    case 2:\n      {\n        return 'Second';\n      }\n\n    case 3:\n      {\n        return 'Third';\n      }\n\n    case 4:\n      {\n        return 'Fourth';\n      }\n\n    case -1:\n      {\n        return 'Last';\n      }\n\n    default:\n      {\n        return data.repeat.yearly.onThe.which;\n      }\n  }\n};\n\nconst computeMonthlyMode = (data, rruleObj) => {\n  if (rruleObj.freq !== 1) {\n    return data.repeat.monthly.mode;\n  }\n\n  if (rruleObj.bymonthday) {\n    return 'on';\n  }\n\n  return 'on the';\n};\n\nconst computeMonthlyInterval = (data, rruleObj) => {\n  if (rruleObj.freq !== 1) {\n    return data.repeat.monthly.interval;\n  }\n\n  return rruleObj.interval;\n};\n\nconst computeMonthlyOnDay = (data, rruleObj) => {\n  if (rruleObj.freq !== 1 || !rruleObj.bymonthday) {\n    return data.repeat.monthly.on.day;\n  }\n\n  if (typeof rruleObj.bymonthday === 'number') {\n    return rruleObj.bymonthday;\n  }\n\n  return rruleObj.bymonthday[0];\n};\n\nconst computeMonthlyOnTheDay = (data, rruleObj) => {\n  if (rruleObj.freq !== 1 || !rruleObj.byweekday) {\n    return data.repeat.monthly.onThe.day;\n  }\n\n  const weekdays = rruleObj.byweekday.map(weekday => weekday.weekday).join(',');\n\n  switch (weekdays) {\n    case '0':\n      {\n        return 'Monday';\n      }\n\n    case '1':\n      {\n        return 'Tuesday';\n      }\n\n    case '2':\n      {\n        return 'Wednesday';\n      }\n\n    case '3':\n      {\n        return 'Thursday';\n      }\n\n    case '4':\n      {\n        return 'Friday';\n      }\n\n    case '5':\n      {\n        return 'Saturday';\n      }\n\n    case '6':\n      {\n        return 'Sunday';\n      }\n\n    case '0,1,2,3,4,5,6':\n      {\n        return 'Day';\n      }\n\n    case '0,1,2,3,4':\n      {\n        return 'Weekday';\n      }\n\n    case '5,6':\n      {\n        return 'Weekend day';\n      }\n\n    default:\n      {\n        return data.repeat.monthly.onThe.day;\n      }\n  }\n};\n\nconst computeMonthlyOnTheWhich = (data, rruleObj) => {\n  if (rruleObj.freq !== 1 || !rruleObj.bysetpos) {\n    return data.repeat.monthly.onThe.which;\n  }\n\n  const bysetpos = typeof rruleObj.bysetpos === 'number' ? rruleObj.bysetpos : rruleObj.bysetpos[0];\n\n  switch (bysetpos) {\n    case 1:\n      {\n        return 'First';\n      }\n\n    case 2:\n      {\n        return 'Second';\n      }\n\n    case 3:\n      {\n        return 'Third';\n      }\n\n    case 4:\n      {\n        return 'Fourth';\n      }\n\n    case -1:\n      {\n        return 'Last';\n      }\n\n    default:\n      {\n        return data.repeat.monthly.onThe.which;\n      }\n  }\n};\n\nconst computeWeeklyInterval = (data, rruleObj) => {\n  if (rruleObj.freq !== 2) {\n    return data.repeat.weekly.interval;\n  }\n\n  return rruleObj.interval;\n};\n\nconst computeWeeklyDays = (data, rruleObj) => {\n  let weekdays = [];\n\n  if (rruleObj.freq !== 2) {\n    return data.repeat.weekly.days;\n  }\n\n  if (rruleObj.byweekday) {\n    weekdays = rruleObj.byweekday.map(weekday => weekday.weekday);\n  }\n\n  return {\n    mon: weekdays.includes(0),\n    tue: weekdays.includes(1),\n    wed: weekdays.includes(2),\n    thu: weekdays.includes(3),\n    fri: weekdays.includes(4),\n    sat: weekdays.includes(5),\n    sun: weekdays.includes(6)\n  };\n};\n\nconst computeWeekStartDay = (data, rruleObj) => {\n  if (!rruleObj.wkst) {\n    return data.options.weekStartsOnSunday;\n  }\n\n  return rruleObj.wkst === 6;\n};\n\nconst computeDailyInterval = (data, rruleObj) => {\n  if (rruleObj.freq !== 3) {\n    return data.repeat.daily.interval;\n  }\n\n  return rruleObj.interval;\n};\n\nconst computeHourlyInterval = (data, rruleObj) => {\n  if (rruleObj.freq !== 4) {\n    return data.repeat.daily.interval;\n  }\n\n  return rruleObj.interval;\n};\n\nconst computeEndMode = (data, rruleObj) => {\n  if (rruleObj.count || rruleObj.count === 0) {\n    return 'After';\n  }\n\n  if (rruleObj.until) {\n    return 'On date';\n  }\n\n  return 'Never';\n};\n\nconst computeEndAfter = (data, rruleObj) => {\n  if (!rruleObj.count && rruleObj.count !== 0) {\n    return data.end.after;\n  }\n\n  return rruleObj.count;\n};\n\nconst computeEndOnDate = (data, rruleObj) => {\n  if (!rruleObj.until) {\n    return data.end.onDate.date;\n  }\n\n  return rruleObj.until;\n};\n\nconst computeRRule = (data, rrule) => {\n  if (!rrule) {\n    return data;\n  }\n\n  let newDataObj;\n\n  try {\n    const rruleOrigOptions = rrulestr(rrule).origOptions;\n    newDataObj = { ...data,\n      start: { ...data.start,\n        onDate: {\n          date: formatDate(computeStartOnDate(data, rruleOrigOptions)),\n          options: { ...data.start.onDate.options,\n            weekStartsOnSunday: computeWeekStartDay(data, rruleOrigOptions)\n          }\n        }\n      },\n      repeat: { ...data.repeat,\n        frequency: computeFrequency(data, rruleOrigOptions),\n        yearly: { ...data.repeat.yearly,\n          mode: computeYearlyMode(data, rruleOrigOptions),\n          on: {\n            month: computeYearlyOnMonth(data, rruleOrigOptions),\n            day: computeYearlyOnMonthday(data, rruleOrigOptions)\n          },\n          onThe: {\n            month: computeYearlyOnTheMonth(data, rruleOrigOptions),\n            day: computeYearlyOnTheMonthday(data, rruleOrigOptions),\n            which: computeYearlyOnTheWhich(data, rruleOrigOptions)\n          }\n        },\n        monthly: { ...data.repeat.monthly,\n          mode: computeMonthlyMode(data, rruleOrigOptions),\n          interval: computeMonthlyInterval(data, rruleOrigOptions),\n          on: {\n            day: computeMonthlyOnDay(data, rruleOrigOptions)\n          },\n          onThe: {\n            day: computeMonthlyOnTheDay(data, rruleOrigOptions),\n            which: computeMonthlyOnTheWhich(data, rruleOrigOptions)\n          }\n        },\n        weekly: {\n          interval: computeWeeklyInterval(data, rruleOrigOptions),\n          days: computeWeeklyDays(data, rruleOrigOptions),\n          options: {\n            weekStartsOnSunday: computeWeekStartDay(data, rruleOrigOptions)\n          }\n        },\n        daily: {\n          interval: computeDailyInterval(data, rruleOrigOptions)\n        },\n        hourly: {\n          interval: computeHourlyInterval(data, rruleOrigOptions)\n        }\n      },\n      end: { ...data.end,\n        mode: computeEndMode(data, rruleOrigOptions),\n        after: computeEndAfter(data, rruleOrigOptions),\n        onDate: {\n          date: formatDate(computeEndOnDate(data, rruleOrigOptions)),\n          options: { ...data.end.onDate.options,\n            weekStartsOnSunday: computeWeekStartDay(data, rruleOrigOptions)\n          }\n        }\n      },\n      options: { ...data.options,\n        weekStartsOnSunday: computeWeekStartDay(data, rruleOrigOptions)\n      },\n      error: null\n    };\n  } catch (e) {\n    return { ...data,\n      error: {\n        value: rrule,\n        message: e\n      }\n    };\n  }\n\n  return newDataObj;\n};\n\nlet StartComponent = /*#__PURE__*/(() => {\n  class StartComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.onChange = new EventEmitter();\n\n      this.writeValue = input => {\n        this.form.patchValue({\n          startDate: new Date(input.onDate.date)\n        });\n      };\n\n      this.onFormChange = () => {\n        if (this.propagateChange) {\n          this.propagateChange({\n            onDate: {\n              date: new Date(this.form.value.startDate)\n            }\n          });\n        }\n\n        this.onChange.emit();\n      };\n    }\n\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        startDate: ''\n      });\n      setTimeout(() => {\n        this.form.valueChanges.subscribe(() => {\n          this.onFormChange();\n        });\n        this.onFormChange();\n      }, 100);\n    }\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn) {}\n\n  }\n\n  StartComponent.ɵfac = function StartComponent_Factory(t) {\n    return new (t || StartComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  StartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StartComponent,\n    selectors: [[\"ngx-start\"]],\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => StartComponent),\n      multi: true\n    }])],\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"form-inline\", 3, \"formGroup\"], [\"for\", \"inlineFormInputName2\", 1, \"mr-1\"], [\"type\", \"text\", \"id\", \"inlineFormInputName2\", \"formControlName\", \"startDate\", \"placeholder\", \"Start Date\", \"name\", \"dp\", \"ngbDatepicker\", \"\", 1, \"form-control\", \"mb-2\", \"mr-sm-2\", 3, \"click\"], [\"d\", \"ngbDatepicker\"]],\n    template: function StartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Start\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 2, 3);\n        i0.ɵɵlistener(\"click\", function StartComponent_Template_input_click_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(4);\n\n          return _r0.toggle();\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i3.NgbInputDatepicker, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return StartComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction YearlyComponent_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 44);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const val_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", val_r1.toString());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(val_r1);\n  }\n}\n\nlet YearlyComponent = /*#__PURE__*/(() => {\n  class YearlyComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.onChange = new EventEmitter();\n\n      this.writeValue = input => {\n        this.form.patchValue(input);\n      };\n\n      this.onFormChange = () => {\n        if (this.propagateChange) {\n          this.propagateChange(this.form.value);\n        }\n\n        this.onChange.emit();\n      };\n\n      this.range = (start, end) => Array.from({\n        length: end - start\n      }, (v, k) => k + start);\n    }\n\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        interval: 0,\n        mode: 'on',\n        on: this.formBuilder.group({\n          month: 'Jan',\n          day: 1\n        }),\n        onThe: this.formBuilder.group({\n          month: 'Jan',\n          day: 'Monday',\n          which: 'First'\n        })\n      });\n      this.form.valueChanges.subscribe(() => {\n        this.onFormChange();\n      });\n      setTimeout(() => {\n        this.onFormChange();\n      }, 100);\n    }\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn) {}\n\n  }\n\n  YearlyComponent.ɵfac = function YearlyComponent_Factory(t) {\n    return new (t || YearlyComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  YearlyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: YearlyComponent,\n    selectors: [[\"ngx-yearly\"]],\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => YearlyComponent),\n      multi: true\n    }])],\n    decls: 102,\n    vars: 7,\n    consts: [[3, \"formGroup\"], [1, \"row\", \"mt-2\"], [1, \"form-inline\"], [1, \"form-group\", \"col-lg-12\"], [\"type\", \"radio\", \"aria-label\", \"Repeat yearly on\", \"value\", \"on\", \"formControlName\", \"mode\"], [1, \"ml-2\"], [\"formGroupName\", \"on\"], [\"formControlName\", \"month\", \"aria-label\", \"Repeat yearly on month\", 1, \"form-control\"], [\"value\", \"Jan\"], [\"value\", \"Feb\"], [\"value\", \"Mar\"], [\"value\", \"Apr\"], [\"value\", \"May\"], [\"value\", \"Jun\"], [\"value\", \"Jul\"], [\"value\", \"Aug\"], [\"value\", \"Sep\"], [\"value\", \"Oct\"], [\"value\", \"Nov\"], [\"value\", \"Dec\"], [\"formControlName\", \"day\", \"aria-label\", \"Repeat yearly on a day\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-12\", \"form-group\"], [\"type\", \"radio\", \"value\", \"on the\", \"formControlName\", \"mode\"], [\"formGroupName\", \"onThe\"], [\"formControlName\", \"which\", \"aria-label\", \"Repeat yearly on the which\", 1, \"form-control\"], [\"value\", \"First\"], [\"value\", \"Second\"], [\"value\", \"Third\"], [\"value\", \"Fourth\"], [\"value\", \"Last\"], [\"formControlName\", \"day\", \"aria-label\", \"Repeat yearly on the day\", 1, \"form-control\"], [\"value\", \"Monday\"], [\"value\", \"Tuesday\"], [\"value\", \"Wednesday\"], [\"value\", \"Thursday\"], [\"value\", \"Friday\"], [\"value\", \"Saturday\"], [\"value\", \"Sunday\"], [\"value\", \"Day\"], [\"value\", \"Weekday\"], [\"value\", \"Weekend day\"], [1, \"ml-1\", \"mr-1\"], [\"formControlName\", \"month\", \"aria-label\", \"Repeat yearly on the month\", 1, \"form-control\"], [3, \"value\"]],\n    template: function YearlyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"input\", 4);\n        i0.ɵɵelementStart(5, \"label\", 5);\n        i0.ɵɵtext(6, \"on\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"select\", 7)(9, \"option\", 8);\n        i0.ɵɵtext(10, \"Jan\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 9);\n        i0.ɵɵtext(12, \"Feb\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 10);\n        i0.ɵɵtext(14, \"Mar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 11);\n        i0.ɵɵtext(16, \"Apr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\", 12);\n        i0.ɵɵtext(18, \"May\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 13);\n        i0.ɵɵtext(20, \"Jun\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 14);\n        i0.ɵɵtext(22, \"Jul\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"option\", 15);\n        i0.ɵɵtext(24, \"Aug\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\", 16);\n        i0.ɵɵtext(26, \"Sep\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"option\", 17);\n        i0.ɵɵtext(28, \"Oct\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"option\", 18);\n        i0.ɵɵtext(30, \"Nov\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 19);\n        i0.ɵɵtext(32, \"Dec\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"select\", 20);\n        i0.ɵɵtemplate(34, YearlyComponent_option_34_Template, 2, 2, \"option\", 21);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(35, \"div\", 1)(36, \"div\", 2)(37, \"div\", 22);\n        i0.ɵɵelement(38, \"input\", 23);\n        i0.ɵɵelementStart(39, \"label\", 5);\n        i0.ɵɵtext(40, \"on the\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 24)(42, \"select\", 25)(43, \"option\", 26);\n        i0.ɵɵtext(44, \"First\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"option\", 27);\n        i0.ɵɵtext(46, \"Second\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"option\", 28);\n        i0.ɵɵtext(48, \"Third\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"option\", 29);\n        i0.ɵɵtext(50, \"Fourth\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"option\", 30);\n        i0.ɵɵtext(52, \"Last\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(53, \"select\", 31)(54, \"option\", 32);\n        i0.ɵɵtext(55, \"Monday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"option\", 33);\n        i0.ɵɵtext(57, \"Tuesday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"option\", 34);\n        i0.ɵɵtext(59, \"Wednesday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"option\", 35);\n        i0.ɵɵtext(61, \"Thursday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"option\", 36);\n        i0.ɵɵtext(63, \"Friday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"option\", 37);\n        i0.ɵɵtext(65, \"Saturday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"option\", 38);\n        i0.ɵɵtext(67, \"Sunday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"option\", 39);\n        i0.ɵɵtext(69, \"Day\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"option\", 40);\n        i0.ɵɵtext(71, \"Weekday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"option\", 41);\n        i0.ɵɵtext(73, \"Weekend day\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(74, \"label\", 42);\n        i0.ɵɵtext(75, \"of\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"div\", 24)(77, \"select\", 43)(78, \"option\", 8);\n        i0.ɵɵtext(79, \"Jan\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"option\", 9);\n        i0.ɵɵtext(81, \"Feb\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"option\", 10);\n        i0.ɵɵtext(83, \"Mar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"option\", 11);\n        i0.ɵɵtext(85, \"Apr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(86, \"option\", 12);\n        i0.ɵɵtext(87, \"May\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(88, \"option\", 13);\n        i0.ɵɵtext(89, \"Jun\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"option\", 14);\n        i0.ɵɵtext(91, \"Jul\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"option\", 15);\n        i0.ɵɵtext(93, \"Aug\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(94, \"option\", 16);\n        i0.ɵɵtext(95, \"Sep\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(96, \"option\", 17);\n        i0.ɵɵtext(97, \"Oct\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(98, \"option\", 18);\n        i0.ɵɵtext(99, \"Nov\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(100, \"option\", 19);\n        i0.ɵɵtext(101, \"Dec\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(8);\n        i0.ɵɵattribute(\"disabled\", ctx.form.value.mode !== \"on\" ? \"\" : null);\n        i0.ɵɵadvance(25);\n        i0.ɵɵattribute(\"disabled\", ctx.form.value.mode !== \"on\" ? \"\" : null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.range(1, 32));\n        i0.ɵɵadvance(8);\n        i0.ɵɵattribute(\"disabled\", ctx.form.value.mode === \"on\" ? \"\" : null);\n        i0.ɵɵadvance(11);\n        i0.ɵɵattribute(\"disabled\", ctx.form.value.mode === \"on\" ? \"\" : null);\n        i0.ɵɵadvance(24);\n        i0.ɵɵattribute(\"disabled\", ctx.form.value.mode === \"on\" ? \"\" : null);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.RadioControlValueAccessor, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.FormGroupName, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i2.NgForOf],\n    styles: [\"\"]\n  });\n  return YearlyComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction MonthlyComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const val_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", val_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(val_r1);\n  }\n}\n\nlet MonthlyComponent = /*#__PURE__*/(() => {\n  class MonthlyComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.onChange = new EventEmitter();\n\n      this.writeValue = input => {\n        this.form.patchValue(input);\n      };\n\n      this.onFormChange = () => {\n        if (this.propagateChange) {\n          this.propagateChange(this.form.value);\n        }\n\n        this.onChange.emit();\n      };\n\n      this.radioChange = event => {\n        if (event.target.value === 'on the') {\n          this.form.patchValue({\n            onDay: ''\n          });\n        } else {\n          this.form.patchValue({\n            onTheWhich: '',\n            onTheDay: ''\n          });\n        }\n\n        this.onFormChange();\n      };\n\n      this.range = (start, end) => Array.from({\n        length: end - start\n      }, (v, k) => k + start);\n    }\n\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        interval: 0,\n        mode: 'on',\n        on: this.formBuilder.group({\n          day: '1'\n        }),\n        onThe: this.formBuilder.group({\n          which: 'First',\n          day: 'Monday'\n        })\n      });\n      this.form.valueChanges.subscribe(() => {\n        this.onFormChange();\n      });\n      setTimeout(() => {\n        this.onFormChange();\n      }, 100);\n    }\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn) {}\n\n  }\n\n  MonthlyComponent.ɵfac = function MonthlyComponent_Factory(t) {\n    return new (t || MonthlyComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  MonthlyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MonthlyComponent,\n    selectors: [[\"ngx-monthly\"]],\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MonthlyComponent),\n      multi: true\n    }])],\n    decls: 46,\n    vars: 5,\n    consts: [[3, \"formGroup\"], [1, \"row\", \"col\", \"form-inline\"], [\"type\", \"radio\", \"formControlName\", \"mode\", \"aria-label\", \"Repeat monthly on\", \"value\", \"on\", \"checked\", \"\", 1, \"mr-sm-2\", 3, \"change\"], [1, \"ml-2\", \"mr-2\"], [\"formGroupName\", \"on\"], [\"aria-label\", \"Repeat monthly on a day\", \"formControlName\", \"day\", 1, \"form-control\", \"mb-2\", \"mr-sm-2\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"form-inline\"], [1, \"form-group\", \"col-lg-12\"], [\"type\", \"radio\", \"formControlName\", \"mode\", \"aria-label\", \"Repeat monthly on\", \"value\", \"on the\", \"checked\", \"\", 1, \"mb-2\", \"mr-sm-2\", 3, \"change\"], [\"formGroupName\", \"onThe\"], [\"formControlName\", \"which\", \"aria-label\", \"Repeat monthly on the which\", 1, \"form-control\", \"mb-2\", \"mr-sm-2\"], [\"value\", \"First\"], [\"value\", \"Second\"], [\"value\", \"Third\"], [\"value\", \"Fourth\"], [\"value\", \"Last\"], [\"formControlName\", \"day\", \"aria-label\", \"Repeat monthly on the day\", 1, \"form-control\", \"mb-2\", \"mr-sm-2\"], [\"value\", \"Monday\"], [\"value\", \"Tuesday\"], [\"value\", \"Wednesday\"], [\"value\", \"Thursday\"], [\"value\", \"Friday\"], [\"value\", \"Saturday\"], [\"value\", \"Sunday\"], [\"value\", \"Day\"], [\"value\", \"Weekday\"], [\"value\", \"Weekend day\"], [3, \"value\"]],\n    template: function MonthlyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"input\", 2);\n        i0.ɵɵlistener(\"change\", function MonthlyComponent_Template_input_change_2_listener($event) {\n          return ctx.radioChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"label\", 3);\n        i0.ɵɵtext(4, \"on day\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"select\", 5);\n        i0.ɵɵtemplate(7, MonthlyComponent_option_7_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"input\", 9);\n        i0.ɵɵlistener(\"change\", function MonthlyComponent_Template_input_change_10_listener($event) {\n          return ctx.radioChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"label\", 3);\n        i0.ɵɵtext(12, \"on the\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"select\", 11)(15, \"option\", 12);\n        i0.ɵɵtext(16, \"First\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\", 13);\n        i0.ɵɵtext(18, \"Second\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 14);\n        i0.ɵɵtext(20, \"Third\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 15);\n        i0.ɵɵtext(22, \"Fourth\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"option\", 16);\n        i0.ɵɵtext(24, \"Last\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"select\", 17)(26, \"option\", 18);\n        i0.ɵɵtext(27, \"Monday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"option\", 19);\n        i0.ɵɵtext(29, \"Tuesday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"option\", 20);\n        i0.ɵɵtext(31, \"Wednesday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"option\", 21);\n        i0.ɵɵtext(33, \"Thursday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"option\", 22);\n        i0.ɵɵtext(35, \"Friday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"option\", 23);\n        i0.ɵɵtext(37, \"Saturday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"option\", 24);\n        i0.ɵɵtext(39, \"Sunday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"option\", 25);\n        i0.ɵɵtext(41, \"Day\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"option\", 26);\n        i0.ɵɵtext(43, \"Weekday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"option\", 27);\n        i0.ɵɵtext(45, \"Weekend day\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵattribute(\"disabled\", ctx.form.value.mode !== \"on\" ? \"\" : null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.range(1, 32));\n        i0.ɵɵadvance(7);\n        i0.ɵɵattribute(\"disabled\", ctx.form.value.mode === \"on\" ? \"\" : null);\n        i0.ɵɵadvance(11);\n        i0.ɵɵattribute(\"disabled\", ctx.form.value.mode === \"on\" ? \"\" : null);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.RadioControlValueAccessor, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.FormGroupName, i1.SelectControlValueAccessor, i2.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return MonthlyComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction WeeklyComponent_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 3);\n    i0.ɵɵelement(1, \"input\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", day_r1.toLowerCase());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", day_r1, \" \");\n  }\n}\n\nlet WeeklyComponent = /*#__PURE__*/(() => {\n  class WeeklyComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.onChange = new EventEmitter();\n      this.days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\n      this.writeValue = input => {\n        this.weeklyForm.patchValue({ ...input.days,\n          weeklyInterval: input.interval\n        });\n      };\n\n      this.onFormChange = () => {\n        if (this.propagateChange) {\n          const value = {\n            interval: 0,\n            days: []\n          };\n          value.interval = this.weeklyForm.value.weeklyInterval;\n          value.days = _.omit(this.weeklyForm.value, ['weeklyInterval']);\n          this.propagateChange(value);\n          this.onChange.emit();\n        }\n      };\n    }\n\n    ngOnInit() {\n      this.weeklyForm = this.formBuilder.group({\n        mon: false,\n        tue: false,\n        wed: false,\n        thu: false,\n        fri: false,\n        sat: false,\n        sun: false,\n        weeklyInterval: 0\n      });\n      this.weeklyForm.valueChanges.subscribe(() => {\n        this.onFormChange();\n      });\n      setTimeout(() => {\n        this.onFormChange();\n      }, 100);\n    }\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn) {}\n\n  }\n\n  WeeklyComponent.ɵfac = function WeeklyComponent_Factory(t) {\n    return new (t || WeeklyComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  WeeklyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeeklyComponent,\n    selectors: [[\"ngx-weekly\"]],\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => WeeklyComponent),\n      multi: true\n    }])],\n    decls: 3,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [1, \"btn-group\", \"btn-group-toggle\"], [\"class\", \"btn-outline-primary btn-circle mr-2\", \"ngbButtonLabel\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"ngbButtonLabel\", \"\", 1, \"btn-outline-primary\", \"btn-circle\", \"mr-2\"], [\"type\", \"checkbox\", \"ngbButton\", \"\", 3, \"formControlName\"]],\n    template: function WeeklyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, WeeklyComponent_label_2_Template, 3, 2, \"label\", 2);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.weeklyForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.days);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.NgForOf, i3.NgbButtonLabel, i1.CheckboxControlValueAccessor, i3.NgbCheckBox, i1.NgControlStatus, i1.FormControlName],\n    styles: [\".btn-circle[_ngcontent-%COMP%]{width:30px;height:30px;padding:6px 0;border-radius:15px!important;text-align:center;font-size:12px;line-height:1.42857}\"]\n  });\n  return WeeklyComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction RepeatComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1, \"Year\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RepeatComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1, \"Month\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RepeatComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1, \"Week\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RepeatComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1, \"Day\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RepeatComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1, \"Hour\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RepeatComponent_ngx_yearly_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-yearly\", 19);\n  }\n}\n\nfunction RepeatComponent_ngx_monthly_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-monthly\", 20);\n  }\n}\n\nfunction RepeatComponent_ngx_weekly_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-weekly\", 21);\n  }\n}\n\nlet RepeatComponent = /*#__PURE__*/(() => {\n  class RepeatComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.onChange = new EventEmitter();\n\n      this.writeValue = input => {\n        this.form.patchValue({ ...input,\n          interval: input[input.frequency.toLowerCase()].interval\n        });\n      };\n\n      this.onFormChange = () => {\n        const params = { ...this.form.value\n        };\n        params[this.form.value.frequency.toLowerCase()].interval = this.form.value.interval;\n\n        if (this.propagateChange) {\n          this.propagateChange(params);\n        }\n\n        this.onChange.emit();\n      };\n    }\n\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        yearly: {},\n        monthly: {},\n        weekly: {},\n        hourly: {},\n        daily: {},\n        interval: 1,\n        frequency: 'Weekly'\n      });\n      this.form.valueChanges.subscribe(() => {\n        this.onFormChange();\n      });\n      setTimeout(() => {\n        this.onFormChange();\n      }, 100);\n    }\n\n    onOptionChange() {\n      this.form.patchValue({\n        yearly: {\n          mode: 'on',\n          on: {\n            month: 'Jan',\n            day: '1'\n          },\n          onThe: {\n            which: 'First',\n            day: 'Monday',\n            month: 'Jan'\n          }\n        },\n        monthly: {\n          mode: 'on',\n          on: {\n            day: 1\n          },\n          onThe: {\n            which: 'First',\n            day: 'Monday'\n          }\n        },\n        weekly: {\n          interval: 1,\n          days: {\n            mon: false,\n            tue: false,\n            wed: false,\n            thu: false,\n            fri: false,\n            sat: false,\n            sun: false\n          }\n        },\n        hourly: {\n          interval: 1\n        },\n        daily: {\n          interval: 1\n        }\n      });\n      this.onFormChange();\n    }\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn) {}\n\n  }\n\n  RepeatComponent.ɵfac = function RepeatComponent_Factory(t) {\n    return new (t || RepeatComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  RepeatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RepeatComponent,\n    selectors: [[\"ngx-repeat\"]],\n    inputs: {\n      frequency: \"frequency\"\n    },\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RepeatComponent),\n      multi: true\n    }])],\n    decls: 15,\n    vars: 9,\n    consts: [[3, \"formGroup\"], [1, \"row\", \"col-lg-12\", \"form-inline\"], [1, \"mr-2\"], [\"aria-label\", \"Repeat interval\", \"value\", \"1\", \"formControlName\", \"interval\", 1, \"form-control\", \"w-25\"], [\"formControlName\", \"frequency\", 1, \"form-control\", \"mt-md-0\", \"mt-sm-2\", 3, \"change\"], [\"value\", \"Yearly\", 4, \"ngIf\"], [\"value\", \"Monthly\", 4, \"ngIf\"], [\"value\", \"Weekly\", 4, \"ngIf\"], [\"value\", \"Daily\", 4, \"ngIf\"], [\"value\", \"Hourly\", 4, \"ngIf\"], [1, \"row\", \"col\", \"mt-1\", \"mb-1\"], [\"formControlName\", \"yearly\", 4, \"ngIf\"], [\"formControlName\", \"monthly\", 4, \"ngIf\"], [\"formControlName\", \"weekly\", 4, \"ngIf\"], [\"value\", \"Yearly\"], [\"value\", \"Monthly\"], [\"value\", \"Weekly\"], [\"value\", \"Daily\"], [\"value\", \"Hourly\"], [\"formControlName\", \"yearly\"], [\"formControlName\", \"monthly\"], [\"formControlName\", \"weekly\"]],\n    template: function RepeatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Repeat every\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementStart(5, \"select\", 4);\n        i0.ɵɵlistener(\"change\", function RepeatComponent_Template_select_change_5_listener() {\n          return ctx.onOptionChange();\n        });\n        i0.ɵɵtemplate(6, RepeatComponent_option_6_Template, 2, 0, \"option\", 5);\n        i0.ɵɵtemplate(7, RepeatComponent_option_7_Template, 2, 0, \"option\", 6);\n        i0.ɵɵtemplate(8, RepeatComponent_option_8_Template, 2, 0, \"option\", 7);\n        i0.ɵɵtemplate(9, RepeatComponent_option_9_Template, 2, 0, \"option\", 8);\n        i0.ɵɵtemplate(10, RepeatComponent_option_10_Template, 2, 0, \"option\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 10);\n        i0.ɵɵtemplate(12, RepeatComponent_ngx_yearly_12_Template, 1, 0, \"ngx-yearly\", 11);\n        i0.ɵɵtemplate(13, RepeatComponent_ngx_monthly_13_Template, 1, 0, \"ngx-monthly\", 12);\n        i0.ɵɵtemplate(14, RepeatComponent_ngx_weekly_14_Template, 1, 0, \"ngx-weekly\", 13);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.frequency || ctx.frequency.indexOf(\"Yearly\") !== -1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.frequency || ctx.frequency.indexOf(\"Monthly\") !== -1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.frequency || ctx.frequency.indexOf(\"Weekly\") !== -1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.frequency || ctx.frequency.indexOf(\"Daily\") !== -1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.frequency || ctx.frequency.indexOf(\"Hourly\") !== -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.value.frequency === \"Yearly\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.value.frequency === \"Monthly\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.value.frequency === \"Weekly\");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.SelectControlValueAccessor, i2.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, YearlyComponent, MonthlyComponent, WeeklyComponent],\n    styles: [\"\"]\n  });\n  return RepeatComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction EndComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 10);\n    i0.ɵɵelement(2, \"input\", 11);\n    i0.ɵɵelementStart(3, \"label\", 12);\n    i0.ɵɵtext(4, \"occurrences\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction EndComponent_input_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 13, 14);\n    i0.ɵɵlistener(\"click\", function EndComponent_input_13_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n\n      const _r2 = i0.ɵɵreference(1);\n\n      return _r2.toggle();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nlet EndComponent = /*#__PURE__*/(() => {\n  class EndComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.onChange = new EventEmitter();\n\n      this.writeValue = input => {\n        this.form.patchValue({ ...input,\n          endAt: new Date(input.onDate.date)\n        });\n      };\n\n      this.onFormChange = () => {\n        const endAt = this.form.value.endAt;\n        const param = { ...this.form.value,\n          onDate: {\n            date: endAt\n          }\n        };\n        this.propagateChange(param);\n        this.onChange.emit();\n      };\n\n      this.radioChange = event => {\n        if (event.target.value === 'on the') {\n          this.form.patchValue({\n            onDay: ''\n          });\n        } else {\n          this.form.patchValue({\n            onTheWhich: '',\n            onTheDay: ''\n          });\n        }\n\n        this.onFormChange();\n      };\n\n      this.range = (start, end) => Array.from({\n        length: end - start\n      }, (v, k) => k + start);\n    }\n\n    ngOnInit() {\n      const dateObj = new Date();\n      const month = dateObj.getMonth() + 1;\n      const day = dateObj.getDate();\n      const year = dateObj.getFullYear();\n      this.form = this.formBuilder.group({\n        after: 1,\n        endAt: {\n          month,\n          day,\n          year\n        },\n        mode: 'Never'\n      });\n      setTimeout(() => {\n        this.form.valueChanges.subscribe(() => {\n          this.onFormChange();\n        });\n        this.onFormChange();\n      }, 100);\n    }\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn) {}\n\n  }\n\n  EndComponent.ɵfac = function EndComponent_Factory(t) {\n    return new (t || EndComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  EndComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EndComponent,\n    selectors: [[\"ngx-end\"]],\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => EndComponent),\n      multi: true\n    }])],\n    decls: 14,\n    vars: 3,\n    consts: [[1, \"form-inline\", 3, \"formGroup\"], [1, \"row\"], [1, \"form-group\", \"col-lg-12\"], [1, \"mr-2\"], [\"formControlName\", \"mode\", 1, \"form-control\"], [\"value\", \"Never\"], [\"value\", \"After\"], [\"value\", \"On date\"], [4, \"ngIf\"], [\"class\", \"form-control ml-2\", \"formControlName\", \"endAt\", \"placeholder\", \"yyyy-mm-dd\", \"ngbDatepicker\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"form-group\", \"m-0\", \"row\", \"d-flex\", \"align-items-center\"], [\"formControlName\", \"after\", \"aria-label\", \"End after\", 1, \"form-control\", \"ml-2\"], [1, \"ml-1\"], [\"formControlName\", \"endAt\", \"placeholder\", \"yyyy-mm-dd\", \"ngbDatepicker\", \"\", 1, \"form-control\", \"ml-2\", 3, \"click\"], [\"d\", \"ngbDatepicker\"]],\n    template: function EndComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Ends\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 4)(6, \"option\", 5);\n        i0.ɵɵtext(7, \"Never\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"option\", 6);\n        i0.ɵɵtext(9, \"After\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 7);\n        i0.ɵɵtext(11, \"On date\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(12, EndComponent_div_12_Template, 5, 0, \"div\", 8);\n        i0.ɵɵtemplate(13, EndComponent_input_13_Template, 2, 0, \"input\", 9);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.value.mode === \"After\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.value.mode == \"On date\");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i2.NgIf, i1.DefaultValueAccessor, i3.NgbInputDatepicker],\n    styles: [\"\"]\n  });\n  return EndComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction NgxRruleComponent_ngx_start_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-start\", 5);\n  }\n}\n\nfunction NgxRruleComponent_br_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"br\");\n  }\n}\n\nfunction NgxRruleComponent_br_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"br\");\n  }\n}\n\nfunction NgxRruleComponent_ngx_end_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-end\", 6);\n  }\n}\n\nlet NgxRruleComponent = /*#__PURE__*/(() => {\n  class NgxRruleComponent {\n    constructor(formBuilder, service) {\n      this.formBuilder = formBuilder;\n      this.service = service;\n      this.hideStart = false;\n      this.hideEnd = false;\n\n      this.writeValue = input => {\n        const config = {};\n\n        const configureFrequency = () => config.repeat ? config.repeat[0] : 'Yearly';\n\n        const configureYearly = () => config.yearly || 'on';\n\n        const configureMonthly = () => config.monthly || 'on';\n\n        const configureEnd = () => config.end ? config.end[0] : 'Never';\n\n        const configureHideStart = () => typeof config.hideStart === 'undefined' ? true : config.hideStart; // const uniqueRruleId = isEmpty(id) ? uniqueId('rrule-') : id;\n\n\n        const init_data = {\n          start: {\n            onDate: {\n              date: formatDate(new Date()),\n              options: {}\n            }\n          },\n          repeat: {\n            frequency: configureFrequency(),\n            yearly: {\n              mode: configureYearly(),\n              on: {\n                month: 'Jan',\n                day: 1\n              },\n              onThe: {\n                month: 'Jan',\n                day: 'Monday',\n                which: 'First'\n              },\n              options: {// modes: config.yearly,\n              }\n            },\n            monthly: {\n              mode: configureMonthly(),\n              interval: 1,\n              on: {\n                day: 1\n              },\n              onThe: {\n                day: 'Monday',\n                which: 'First'\n              },\n              options: {// modes: config.monthly,\n              }\n            },\n            weekly: {\n              interval: 1,\n              days: {\n                mon: false,\n                tue: false,\n                wed: false,\n                thu: false,\n                fri: false,\n                sat: false,\n                sun: false\n              },\n              options: {// weekStartsOnSunday: config.weekStartsOnSunday,\n              }\n            },\n            daily: {\n              interval: 1\n            },\n            hourly: {\n              interval: 1\n            },\n            options: {// frequency: config.repeat,\n            }\n          },\n          end: {\n            mode: configureEnd(),\n            after: 1,\n            onDate: {\n              date: formatDate(new Date()),\n              options: {// weekStartsOnSunday: config.weekStartsOnSunday,\n                // calendarComponent,\n              }\n            },\n            options: {\n              modes: config.end\n            }\n          },\n          options: {\n            hideStart: configureHideStart(),\n            hideEnd: config.hideEnd,\n            hideError: config.hideError,\n            weekStartsOnSunday: config.weekStartsOnSunday\n          },\n          error: null\n        };\n        const data = computeRRule(init_data, input);\n        this.form.patchValue(data);\n      };\n\n      this.onFormChange = () => {\n        let rRule;\n\n        try {\n          const params = this.form.value;\n\n          if (this.hideStart && !this.startAt) {\n            params.start = null;\n          }\n\n          if (this.hideEnd && !this.endAt) {\n            params.end = null;\n          }\n\n          rRule = this.service.computeRRule({ ...params,\n            options: {\n              tz: this.tz\n            }\n          });\n        } catch (err) {\n          console.error(err);\n        }\n\n        if (this.propagateChange) {\n          this.propagateChange({\n            raw: this.form.value,\n            rRule\n          });\n        }\n      };\n    }\n\n    ngOnInit() {\n      const params = {\n        start: {},\n        repeat: {},\n        end: {\n          mode: 'Never'\n        }\n      };\n\n      if (this.endAt) {\n        params.end = {\n          mode: 'On date',\n          onDate: {\n            date: getDateParts(this.endAt)\n          }\n        };\n      }\n\n      if (this.startAt) {\n        params.start = {\n          onDate: {\n            date: getDateParts(this.startAt)\n          }\n        };\n      }\n\n      this.form = this.formBuilder.group(params);\n      this.form.valueChanges.subscribe(() => setTimeout(() => {\n        this.onFormChange();\n      }, 100));\n    }\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn) {}\n\n    ngOnChanges(changes) {\n      setTimeout(() => {\n        this.onFormChange();\n      }, 10);\n    }\n\n  }\n\n  NgxRruleComponent.ɵfac = function NgxRruleComponent_Factory(t) {\n    return new (t || NgxRruleComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(NgxRruleService));\n  };\n\n  NgxRruleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NgxRruleComponent,\n    selectors: [[\"ngx-rrule\"]],\n    inputs: {\n      hideStart: \"hideStart\",\n      hideEnd: \"hideEnd\",\n      startAt: \"startAt\",\n      endAt: \"endAt\",\n      frequency: \"frequency\",\n      tz: \"tz\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxRruleComponent),\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 6,\n    consts: [[3, \"formGroup\"], [\"formControlName\", \"start\", 4, \"ngIf\"], [4, \"ngIf\"], [\"formControlName\", \"repeat\", 3, \"frequency\"], [\"formControlName\", \"end\", 4, \"ngIf\"], [\"formControlName\", \"start\"], [\"formControlName\", \"end\"]],\n    template: function NgxRruleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵtemplate(1, NgxRruleComponent_ngx_start_1_Template, 1, 0, \"ngx-start\", 1);\n        i0.ɵɵtemplate(2, NgxRruleComponent_br_2_Template, 1, 0, \"br\", 2);\n        i0.ɵɵelement(3, \"ngx-repeat\", 3);\n        i0.ɵɵtemplate(4, NgxRruleComponent_br_4_Template, 1, 0, \"br\", 2);\n        i0.ɵɵtemplate(5, NgxRruleComponent_ngx_end_5_Template, 1, 0, \"ngx-end\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hideStart === false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hideStart === false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"frequency\", ctx.frequency);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hideEnd === false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hideEnd === false);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.NgIf, StartComponent, i1.NgControlStatus, i1.FormControlName, RepeatComponent, EndComponent],\n    encapsulation: 2\n  });\n  return NgxRruleComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NgxRruleModule = /*#__PURE__*/(() => {\n  class NgxRruleModule {}\n\n  NgxRruleModule.ɵfac = function NgxRruleModule_Factory(t) {\n    return new (t || NgxRruleModule)();\n  };\n\n  NgxRruleModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: NgxRruleModule\n  });\n  NgxRruleModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: NgbDateAdapter,\n      useClass: NgbDateNativeAdapter\n    }],\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, NgbModule]]\n  });\n  return NgxRruleModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(NgxRruleModule, {\n    declarations: [NgxRruleComponent, StartComponent, EndComponent, RepeatComponent, WeeklyComponent, MonthlyComponent, YearlyComponent],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule],\n    exports: [NgxRruleComponent]\n  });\n})();\n/*\r\n * Public API Surface of ngx-rrule\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NgxRruleComponent, NgxRruleModule, NgxRruleService }; //# sourceMappingURL=ngx-rrule.mjs.map","map":null,"metadata":{},"sourceType":"module"}