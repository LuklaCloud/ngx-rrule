{"ast":null,"code":"import { dateInTimeZone, timeToUntilString } from './dateutil';\n\nvar DateWithZone =\n/** @class */\nfunction () {\n  function DateWithZone(date, tzid) {\n    if (isNaN(date.getTime())) {\n      throw new RangeError('Invalid date passed to DateWithZone');\n    }\n\n    this.date = date;\n    this.tzid = tzid;\n  }\n\n  Object.defineProperty(DateWithZone.prototype, \"isUTC\", {\n    get: function () {\n      return !this.tzid || this.tzid.toUpperCase() === 'UTC';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DateWithZone.prototype.toString = function () {\n    var datestr = timeToUntilString(this.date.getTime(), this.isUTC);\n\n    if (!this.isUTC) {\n      return \";TZID=\".concat(this.tzid, \":\").concat(datestr);\n    }\n\n    return \":\".concat(datestr);\n  };\n\n  DateWithZone.prototype.getTime = function () {\n    return this.date.getTime();\n  };\n\n  DateWithZone.prototype.rezonedDate = function () {\n    if (this.isUTC) {\n      return this.date;\n    }\n\n    return dateInTimeZone(this.date, this.tzid);\n  };\n\n  return DateWithZone;\n}();\n\nexport { DateWithZone }; //# sourceMappingURL=datewithzone.js.map","map":null,"metadata":{},"sourceType":"module"}